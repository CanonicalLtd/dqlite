// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command/commands.proto

/*
Package command is a generated protocol buffer package.

It is generated from these files:
	command/commands.proto

It has these top-level messages:
	Command
	Open
	Begin
	WalFrames
	WalFramesPage
	Undo
	End
	Checkpoint
*/
package command

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Code int32

const (
	Code_OPEN       Code = 0
	Code_BEGIN      Code = 1
	Code_WAL_FRAMES Code = 2
	Code_UNDO       Code = 3
	Code_END        Code = 4
	Code_CHECKPOINT Code = 5
)

var Code_name = map[int32]string{
	0: "OPEN",
	1: "BEGIN",
	2: "WAL_FRAMES",
	3: "UNDO",
	4: "END",
	5: "CHECKPOINT",
}
var Code_value = map[string]int32{
	"OPEN":       0,
	"BEGIN":      1,
	"WAL_FRAMES": 2,
	"UNDO":       3,
	"END":        4,
	"CHECKPOINT": 5,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}
func (Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Command struct {
	Code   Code   `protobuf:"varint,1,opt,name=code,enum=command.Code" json:"code,omitempty"`
	Params []byte `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_OPEN
}

func (m *Command) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

type Open struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Open) Reset()                    { *m = Open{} }
func (m *Open) String() string            { return proto.CompactTextString(m) }
func (*Open) ProtoMessage()               {}
func (*Open) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Open) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Begin struct {
	Txid string `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Begin) Reset()                    { *m = Begin{} }
func (m *Begin) String() string            { return proto.CompactTextString(m) }
func (*Begin) ProtoMessage()               {}
func (*Begin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Begin) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Begin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WalFrames struct {
	Txid      string           `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
	PageSize  int32            `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	Pages     []*WalFramesPage `protobuf:"bytes,3,rep,name=pages" json:"pages,omitempty"`
	Truncate  uint32           `protobuf:"varint,4,opt,name=truncate" json:"truncate,omitempty"`
	IsCommit  int32            `protobuf:"varint,5,opt,name=is_commit,json=isCommit" json:"is_commit,omitempty"`
	SyncFlags uint32           `protobuf:"varint,6,opt,name=sync_flags,json=syncFlags" json:"sync_flags,omitempty"`
}

func (m *WalFrames) Reset()                    { *m = WalFrames{} }
func (m *WalFrames) String() string            { return proto.CompactTextString(m) }
func (*WalFrames) ProtoMessage()               {}
func (*WalFrames) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *WalFrames) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *WalFrames) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *WalFrames) GetPages() []*WalFramesPage {
	if m != nil {
		return m.Pages
	}
	return nil
}

func (m *WalFrames) GetTruncate() uint32 {
	if m != nil {
		return m.Truncate
	}
	return 0
}

func (m *WalFrames) GetIsCommit() int32 {
	if m != nil {
		return m.IsCommit
	}
	return 0
}

func (m *WalFrames) GetSyncFlags() uint32 {
	if m != nil {
		return m.SyncFlags
	}
	return 0
}

type WalFramesPage struct {
	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Flags  uint32 `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Number uint32 `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
}

func (m *WalFramesPage) Reset()                    { *m = WalFramesPage{} }
func (m *WalFramesPage) String() string            { return proto.CompactTextString(m) }
func (*WalFramesPage) ProtoMessage()               {}
func (*WalFramesPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *WalFramesPage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WalFramesPage) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *WalFramesPage) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type Undo struct {
	Txid string `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
}

func (m *Undo) Reset()                    { *m = Undo{} }
func (m *Undo) String() string            { return proto.CompactTextString(m) }
func (*Undo) ProtoMessage()               {}
func (*Undo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Undo) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type End struct {
	Txid string `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
}

func (m *End) Reset()                    { *m = End{} }
func (m *End) String() string            { return proto.CompactTextString(m) }
func (*End) ProtoMessage()               {}
func (*End) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *End) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type Checkpoint struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Checkpoint) Reset()                    { *m = Checkpoint{} }
func (m *Checkpoint) String() string            { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()               {}
func (*Checkpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Checkpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "command.Command")
	proto.RegisterType((*Open)(nil), "command.Open")
	proto.RegisterType((*Begin)(nil), "command.Begin")
	proto.RegisterType((*WalFrames)(nil), "command.WalFrames")
	proto.RegisterType((*WalFramesPage)(nil), "command.WalFramesPage")
	proto.RegisterType((*Undo)(nil), "command.Undo")
	proto.RegisterType((*End)(nil), "command.End")
	proto.RegisterType((*Checkpoint)(nil), "command.Checkpoint")
	proto.RegisterEnum("command.Code", Code_name, Code_value)
}

func init() { proto.RegisterFile("command/commands.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x6f, 0x8f, 0x93, 0x40,
	0x10, 0xc6, 0xe5, 0x5f, 0x5b, 0xc6, 0xeb, 0x85, 0x6c, 0x4c, 0x83, 0x67, 0x4c, 0x90, 0x57, 0xc4,
	0x98, 0x5e, 0x72, 0x7e, 0x82, 0x2b, 0xa5, 0xda, 0xa8, 0x50, 0xb7, 0x36, 0x7d, 0x49, 0xb6, 0xb0,
	0xe2, 0xc6, 0xb2, 0x10, 0x96, 0x26, 0xda, 0x8f, 0xe7, 0x27, 0x33, 0xbb, 0x20, 0xf1, 0x12, 0x5e,
	0xf1, 0x3c, 0x33, 0xf3, 0xdb, 0xc9, 0xcc, 0x00, 0x8b, 0xac, 0x2a, 0x4b, 0xc2, 0xf3, 0xfb, 0xfe,
	0x2b, 0x96, 0x75, 0x53, 0xb5, 0x15, 0x9a, 0xf6, 0xde, 0x5f, 0xc3, 0x34, 0xec, 0x24, 0x7a, 0x03,
	0x66, 0x56, 0xe5, 0xd4, 0xd5, 0x3c, 0x2d, 0xb8, 0x7d, 0x98, 0x2f, 0xfb, 0x92, 0x65, 0x58, 0xe5,
	0x14, 0xab, 0x14, 0x5a, 0xc0, 0xa4, 0x26, 0x0d, 0x29, 0x85, 0xab, 0x7b, 0x5a, 0x70, 0x83, 0x7b,
	0xe7, 0xdf, 0x81, 0x99, 0xd4, 0x94, 0x23, 0x04, 0x26, 0x27, 0x65, 0xf7, 0x84, 0x8d, 0x95, 0xf6,
	0xef, 0xc1, 0x5a, 0xd1, 0x82, 0xa9, 0x64, 0xfb, 0x8b, 0xe5, 0xff, 0x92, 0x52, 0x0f, 0x80, 0xfe,
	0x1f, 0xf0, 0x47, 0x03, 0xfb, 0x48, 0xce, 0x9b, 0x86, 0x94, 0x54, 0x8c, 0x52, 0xaf, 0xc0, 0xae,
	0x49, 0x41, 0x53, 0xc1, 0xae, 0x1d, 0x6a, 0xe1, 0x99, 0x0c, 0xec, 0xd9, 0x95, 0xa2, 0x77, 0x60,
	0x49, 0x2d, 0x5c, 0xc3, 0x33, 0x82, 0xe7, 0x0f, 0x8b, 0x61, 0x8e, 0xe1, 0xcd, 0x1d, 0x29, 0x28,
	0xee, 0x8a, 0xd0, 0x1d, 0xcc, 0xda, 0xe6, 0xc2, 0x33, 0xd2, 0x52, 0xd7, 0xf4, 0xb4, 0x60, 0x8e,
	0x07, 0x2f, 0xdb, 0x30, 0x91, 0x4a, 0x9c, 0xb5, 0xae, 0xd5, 0xb5, 0x61, 0x22, 0x54, 0x1e, 0xbd,
	0x06, 0x10, 0xbf, 0x79, 0x96, 0x7e, 0x3f, 0x93, 0x42, 0xb8, 0x13, 0x85, 0xda, 0x32, 0xb2, 0x91,
	0x01, 0xff, 0x2b, 0xcc, 0x9f, 0xf4, 0x93, 0x73, 0xe4, 0xa4, 0x25, 0x6a, 0x8e, 0x1b, 0xac, 0x34,
	0x7a, 0x01, 0x56, 0x87, 0xeb, 0x0a, 0xef, 0x8c, 0x5c, 0x32, 0xbf, 0x94, 0x27, 0xda, 0xb8, 0x86,
	0x0a, 0xf7, 0x4e, 0x2e, 0xf9, 0xc0, 0xf3, 0x6a, 0x6c, 0x23, 0xfe, 0x4b, 0x30, 0x22, 0x9e, 0x8f,
	0xa6, 0x3c, 0x80, 0xf0, 0x07, 0xcd, 0x7e, 0xd6, 0x15, 0xe3, 0xed, 0xd8, 0x85, 0xde, 0xc6, 0x60,
	0xca, 0x1b, 0xa3, 0x19, 0x98, 0xc9, 0x2e, 0x8a, 0x9d, 0x67, 0xc8, 0x06, 0x6b, 0x15, 0x7d, 0xd8,
	0xc6, 0x8e, 0x86, 0x6e, 0x01, 0x8e, 0x8f, 0x9f, 0xd3, 0x0d, 0x7e, 0xfc, 0x12, 0xed, 0x1d, 0x5d,
	0x16, 0x1d, 0xe2, 0x75, 0xe2, 0x18, 0x68, 0x0a, 0x46, 0x14, 0xaf, 0x1d, 0x53, 0x96, 0x84, 0x1f,
	0xa3, 0xf0, 0xd3, 0x2e, 0xd9, 0xc6, 0xdf, 0x1c, 0xeb, 0x34, 0x51, 0xff, 0xd8, 0xfb, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x87, 0x31, 0x34, 0xc2, 0x7d, 0x02, 0x00, 0x00,
}
